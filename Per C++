#include <iostream>
using namespace std;
int N=4; int X[N][2]={{0,0}, {0,1}, {1,0}, {1,1}}

bool cross(){}

double Per(){}

void Backtracking(int k){
    static int A[N+1][2];
    if(k==0) A[0]=X[0]; A[N]=X[0];
    if (k==N){
        for(int i=0;i<N;i+=2){
            for(int j=1;j<N;j+=2){
                for(int k=2;k<N;k+=2){
                    if((cross(A[i],A[j],A[i+k],A[j+k])))
                  }
              }
          }
      }
    else{
        for(int i=1;i<N;i++){
            A[k]=X[i];
            Backtracking(k+1);
        }
    }
    
    
}
